// VARIABLES
$black: #222222;
$silver: #999999;

.header {

    &__logo {
        display: grid;
        align-content: start;
        width: 90px;

        img {

        }
    }

    &__nav {
        display: grid;
        align-content: center;
    }

    &__ul {
    
    }

    &__li {

    }

    &__link {
        display: inline-block;
        padding: 13px 0;
        
        font-size: 15px;
        font-weight: bold;
        color: $black;
        text-decoration: none;
        transition: all 0.2s ease-in-out;

        &:hover {
            transform: translateX(10px);
            transition: transform 0.2s ease-in-out;
        }
    }

    &__footer {
        display: grid;
        align-content: end;
    }

    &__social {
        display: grid;
        grid-template-columns: repeat(5, 1fr);

        &--link {
            
            i {
                font-size: 18px;
                color: $black;
                transition: all 0.2s ease-in-out;

                &:hover {
                    transform: scale(1.5);
                    transition: transform 0.2s ease-in-out;
                }
            }

        }

        &__item {
        
        }
    }

    &__right {
        font-size: 14px;
        line-height: 1.57;
        color: $silver;
        margin-top: 35px;
    }

}



































//  .container {
//      grid-template-columns: 300px 1fr auto;  // vytvori tri stlpce, prvy fixny, auto budem na minime sirky kvoli fr, fr vyplni zvysok
//      grid-template-rows: 250px 100px;    // vytvori dve implicitne riadky
//      grid-auto-rows: 50px;       // exlicitne riadky nastavy na 50px
//  }

//  .container {
//      grid-template-columns: repeat(7, 100px); // vytvori 7 stlpcov do riadku a nastavi vsetkym stlpcom sirku
//  }




/* 
// definovali sme si sirku dvoch collumns

    grid-template-columns: 150px 160px; // definovali sme si sirku dvoch collumns
    grid-auto-flow: column; // vsetky implicitne elementy, dalsie riadky, zarad do stlpcov vedla
    grid-auto-columns: 200px;   // vsetkym implicitnym stlpcom nastav sirku, ale nie explicitnym


// vytvori ti tri stlpce a ty si definujes ich pomer sirky na container
    grid-template-columns: 200px 1fr 3fr;

// ak je tam fr tak auto bude na minimalne sirke avsak pri zvacseni textu sa roztiahne podla potreby
    grid-template-columns: auto 1fr;

// Ak mame stlpce nastavene na 1fr, tak sa automaticky stlpce pod nim budu natahovat ako najsirsi element, preto pre dany element 
//    nastav√≠me "grid-column: span 2;". element zaberie sirku dvoch elementov.
        grid-column: span 2; 
        grid-row: 2;


// na ktorom elemente zacinas a pred ktorym koncis, zabera dve miesta (priamo na elemente udavas)
        grid-column-start: 2;
        grid-column-end: 4;
    // skrateny zapis
        grid-column: 2/4;

    // to iste i s row: 
        grid-row: 2/4;


// na ktorej pozicii ma zacat a kolko miest ma zaberat (priamo na elemente udavas)
    grid-column: 2 / span 4;
// zoberie si cely riadok - ale necha medzeru po sebe
    grid-column: 1 / -1;


// automaticky prida tolko col kolko sa zmesti podla nastavenia
     grid-template-columns: repeat(auto-fill, 200px);
 grid-template-columns: repeat(auto-fit, 200px);    // rozdiel len pri mensom poste col, ktore nepresahuju row


// definujes si minimalnu sirku pre elementy, pri ktorej nastane breakpoint, netreba ti ani styly naviac
     grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));  // auto-fill nezaplni celu sirku, elementy troska roztiahne ale nie uplne
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));    // auto-fit roztiahne elementy na celu sirku a nenecha volny priestor


    // namiesto grid-template-columns a grid-template-row   
    // grid-template: 1fr 1fr / 1fr 1fr


    */


    // rozmiestnovanie elementov na zaklade grid-area

/*     .item-content {
        display: grid;
        grid-template-columns: 1fr 10fr 1fr;
        grid-template-rows: 150px 150px 100px;
        grid-gap: 20px;
        grid-template-areas: 
        "sidebar-1 content sidebar-2"
        "sidebar-1 content sidebar-2"
        "footer footer footer";
    
        .sidebar-1 {
            grid-area: sidebar-1;
        }
    
        
        .sidebar-2 {
            grid-area: sidebar-2;
        }
    
        .content {
            grid-area: content;
        }
    
        .footer {
            grid-area: footer;
        }
    
        @media (max-width: 992px) {
            grid-template-areas: 
            "content content content"
            "sidebar-1 sidebar-1 sidebar-2"
            "footer footer footer";
        }
    }
 */
